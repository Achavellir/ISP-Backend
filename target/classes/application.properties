# PostgreSQL Configuration (commented out)
#spring.datasource.url=jdbc:postgresql://localhost:5432/isp_db
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.username=${DB_USERNAME:rishiachavelli}
#spring.datasource.password=${DB_PASSWORD:Rishi@1502}
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:isp_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Database Connection Pool Configuration
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.pool-name=ISPHikariPool

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true

# SQL Initialization
spring.sql.init.mode=always
spring.sql.init.platform=h2

# Security Configuration
jwt.secret=${JWT_SECRET:isp_default_secret_key_for_development_only}
jwt.expiration=86400000

# Server Configuration
server.port=8083
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.pattern=%t %a "%r" %s %b %D

# Logging Configuration
logging.level.root=INFO
logging.level.org.isp=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.file.name=logs/isp-backend.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# CORS Configuration
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Redis Configuration (disabled by default)
spring.data.redis.enabled=false
spring.cache.type=none

# Rate Limiting
rate.limit.enabled=true
rate.limit.requests-per-second=50
rate.limit.requests-per-minute=100

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,loggers
management.endpoint.health.show-details=when_authorized
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Metrics Configuration
management.metrics.tags.application=isp-backend
management.metrics.enable.jvm=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.sla.http.server.requests=50ms,100ms,200ms,500ms

# Async Configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=25
spring.task.execution.thread-name-prefix=async-task-

# JobRunr Configuration (disabled by default)
org.jobrunr.background-job-server.enabled=false
org.jobrunr.dashboard.enabled=false
